apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-arm-config
  namespace: nginx
data:
  nginx.conf: |
    worker_processes 2;
    worker_cpu_affinity 01 10;
    worker_rlimit_nofile 1000000;
    events {
        worker_connections 6144;
        use epoll;
        multi_accept on;
    }
    http {
        access_log off;
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        server {
            listen 80;
            location / {
                return 200 '{"message":"nginx response","timestamp":"$time_iso8601","server":"$hostname","request_uri":"$request_uri"}';
                add_header Content-Type application/json;
            }
        }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-arm-deployment
  namespace: nginx
  labels:
    app: nginx-multiarch
spec:
  replicas: 1
  selector:
    matchLabels:
      arch: arm
  template:
    metadata:
      labels:
        app: nginx-multiarch
        arch: arm
    spec:
      nodeSelector:
        kubernetes.io/arch: arm64
      containers:
      - image: nginx:latest
        name: nginx
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
      volumes:
      - name: nginx-config
        configMap:
          name: nginx-arm-config
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-arm-svc
  namespace: nginx
spec:
  sessionAffinity: None
  ports:
  - nodePort: 30082
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: nginx-multiarch
    arch: arm
  type: LoadBalancer
